When would you want to use a remote repository rather than keeping all your work local?
  When you were working with other peopler or from multiple locations it wouild be nice to store things online. Also keeping a copy of your work offsite in case of a computer issue seems smart. 

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
	If multiple people are making commits to a project you wouldnt want to automatically pull those changes because it could effect work you are doing. 

Describe the differences between forks, clones, and branches. When would you use 
one instead of another?
	Forks are online on git only. Clones are from github to local machine. Branches are on either the local machine or on github.

What is the benefit of having a copy of the last known state of the remote stored locally?
	This gives you a fresh place to start as well as a known state of the remote for when you are offline. 

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
	I would use a checkout procedure on a shared file system. It would be easier to commit because there would be less controlls. It would be harder because the checkout procedure is normally messy and commits can be made without everyone looking at them. 

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
	Working on different features or different people working on different parts of the code is when I would branch. Not branching makes things simpler and less confusing when tryin to remerg the code into the master. Using different banches makes it easier for different people to work on the same project or seperate features. 

